% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeAclust.R
\name{pipeAclust}
\alias{pipeAclust}
\title{Evaluate Prediction on Methylation Data}
\usage{
pipeAclust(rowNum, Beta_df, beta2M = TRUE, respCol_index, designInfo_df,
  chromeAnnot_ls, alphaValue = seq(0, 1, by = 0.1), ncores = 2,
  chooseCpGs = fullCpGs, predictMethod = c("glmnet", "randomForest",
  "svm"), outcome_type = "binomial", save = FALSE, resultPath = NULL)
}
\arguments{
\item{rowNum}{num of row in information_df}

\item{Beta_df}{Beta_df is a data frame that each row is a cpg probe, each col
is a sample id, each cell is a Beta value, first column is the phenodata, please
make sure this column is a factor with levels, or we can not ensure accuracy
of the results}

\item{beta2M}{whether transfre beta to m value before prediction}

\item{respCol_index}{response variable col number in beta data frame}

\item{designInfo_df}{information df generate by \link{summaryInfo} function}

\item{chromeAnnot_ls}{list that contains 22 chrome annot probe information}

\item{alphaValue}{vector that storage alpha values}

\item{ncores}{number of cores to do parallel computing}

\item{chooseCpGs}{what cpg selection method to use, use full cpgs \link{fullCpGs}
within cluster or PC1 score \link{getPC1} of cluster or maximum \link{maxCpGs}
expression score, default set to fullcpgs, it is feasible to write new methods
by adding a new function that take in train/test dataset and cpglist then
return a list of train and test subset data.}

\item{predictMethod}{what prediction method to use}

\item{outcome_type}{type of outcome variable, gauusian or binomial or poisson, etc}

\item{save}{whether to save the results}

\item{resultPath}{path to storage results}
}
\value{
return a list with three elements,\cr
\enumerate{
    \item first element is the fit model results of different prediction methods
    \item Second item second element is the data frame that contains evalutation parameters of
          different prediction methods' performace:\cr
        for glmnet net, the data frame has row number equal to number of alpha
          values given in the function argument times 16 columns with different
          evaluation parameters including NumOfRep,NumOfCv, auc_results,
          Sensitivity, Specificity, etc;\cr
        for random forest and support vector machine, the data frame has one
          row times 14 columns with different evaluation parameters including
          NumOfRep,NumOfCv, auc_results, Sensitivity, Specificity, etc\cr
    \item third element is a vector that indicate number of predictors used
 }
}
\description{
Read data, based on one row of information_df, then use aclust
 methods to select cpgs as predictors fit \link{glmnet} elastic net,
 \link{caret} random forest or support vector machine model and evaluate its
  prediction performance.
}
\details{
\describe{
 \item{predictMethod1: }{Elastic net from function \link[glmnet]{glmnet}
     to do prediction}
 \item{predictMethod2: }{Random Forest from function \link[caret]{train}
     to do prediction(requires package "randomForest" installed first)}
 \item{predictMethod3: }{Support Vector Machine from function
     \link[caret]{train} to do prediction(requires package "kernlab" installed)}
}
}
\examples{
\dontrun{
 data(Example_df)
 data(pfcInfo_df)
 data(chrome_annot_files)

 test1 <- pipeAclust(
   rowNum = 10,
   Beta_df = Example_df,
   beta2M = TRUE,
   respCol_index = 1,
   designInfo_df = pfcInfo_df,
   chromeAnnot_ls = chrome_annot_files,
   alphaValue = seq(0, 1, by = 0.1),
   ncores = 2,
   chooseCpGs = fullCpGs,
   predictMethod = "glmnet",
   outcome_type = "binomial",
   save = FALSE,
   resultPath = NULL
 )

 test2 <- pipeAclust(
   rowNum = 10,
   Beta_df = Example_df,
   beta2M = TRUE,
   respCol_index = 1,
   designInfo_df = pfcInfo_df,
   chromeAnnot_ls = chrome_annot_files,
   alphaValue = seq(0, 1, by = 0.1),
   ncores = 2,
   chooseCpGs = getPC1,
   predictMethod = "glmnet",
   outcome_type = "binomial",
   save = FALSE,
   resultPath = NULL
 )

 test3 <- pipeAclust(
   rowNum = 10,
   Beta_df = Example_df,
   beta2M = TRUE,
   respCol_index = 1,
   designInfo_df = pfcInfo_df,
   chromeAnnot_ls = chrome_annot_files,
   alphaValue = seq(0, 1, by = 0.1),
   ncores = 2,
   chooseCpGs = maxCpGs,
   predictMethod = "glmnet",
   outcome_type = "binomial",
   save = FALSE,
   resultPath = NULL
 )
}
}
